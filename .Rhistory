nyt_counties %>%
filter(state == "Tennessee", date == day) %>%
right_join(counties_sf %>% filter(state_name == "Tennessee"),
by = c("fips" = "county_fips")) %>%
mutate(cases = ifelse(is.na(cases), 0, cases),
deaths = ifelse(is.na(deaths), 0, deaths))
ggplot() +
geom_sf(tn,
mapping = aes(fill = cases, geometry = geometry),
color = "white", size = 0.05) +
coord_sf(datum = NA) +
labs(fill = "Confirmed Cases",
title = paste0("Tennessee COVID-19 Cases as of ", day))
reactable::reactable(nyt_counties)
nyt_day <-
nyt_counties %>% filter(date = "2020-04-10")
nyt_day <-
nyt_counties %>% filter(date == "2020-04-10")
View(nyt_day)
nyt_day <-
nyt_counties %>% filter(date == "2020-04-10", state == "Ohio")
View(nyt_day)
mydates <- seq(as.Date('2020-03-01'),
as.Date('2020-04-16'), by = 'day')
runApp()
state.name
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
date
day <-
nyt_counties %>%
pull(date) %>%
unique() %>%
sort(decreasing = TRUE) %>%
.[1]
.[1]
nyt_day <-
nyt_counties %>%
filter(state == "Tennessee", date == day) %>%
mutate(cases = ifelse(is.na(cases), 0, cases),
deaths = ifelse(is.na(deaths), 0, deaths))
View(nyt_day)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('medicare')
runApp()
install.packages("mapview")
install.packages("mapview")
mapview(nyt_day)
nyt_day %>% sf::st_as_sf() %>% mapview()
View(nyt_day)
nyt_day %>% sf::st_as_sf() %>% mapview(zcol = c("cases","deaths,"county"))
## get the most recent available day:
day <-
nyt_counties %>%
pull(date) %>%
unique() %>%
sort(decreasing = TRUE) %>%
.[1]
## devtools::install_github("UrbanInstitute/urbnmapr")
counties_sf <- urbnmapr::get_urbn_map("counties", sf = TRUE)
tn <-
nyt_counties %>%
filter(state == "Tennessee", date == day) %>%
right_join(counties_sf %>% filter(state_name == "Tennessee"),
by = c("fips" = "county_fips")) %>%
mutate(cases = ifelse(is.na(cases), 0, cases),
deaths = ifelse(is.na(deaths), 0, deaths))
View(tn)
View(nyt_day)
nyt_day %>% <- urbnmapr::get_urbn_map("counties", sf = TRUE)
counties_sf <- urbnmapr::get_urbn_map("counties", sf = TRUE)
pl <-
nyt_day %>%
right_join(counties_sf %>% filter(state_name == "Tennessee"),
by = c("fips" = "county_fips"))
View(pl)
mapview(pl)
pl %>%
sf::st_as_sf() %>%
mapview::mapview(zcol = c("cases", "deaths", "county_name"))
View(nyt_data)
View(nyt_day)
View(pl)
remotes::install_github("r-spatial/mapview@develop")
remove.packages("mapview")
install.packages("mapview")
library(mapview)
pl %>%
sf::st_as_sf() %>%
mapview::mapview(zcol = c("cases", "deaths", "county_name"))
library(dplyr)
library(shiny)
library(shinydashboard)
library(tidyr)
library(sf)
pl %>%
sf::st_as_sf() %>%
mapview::mapview(zcol = c("cases", "deaths", "county_name"))
View(pl)
library(tidyverse)
library(reactable)
library(plotly)
#devtools::install_github("UrbanInstitute/urbnmapr")
library(urbnmapr)
library(mapview)
load("data/nyt_counties.rda")
load("data/nyt_states.rda")
knitr::opts_chunk$set(
size = "small",
error = TRUE,
fig.align = "center",
tidy = FALSE
)
tn %>%
sf::st_as_sf() %>%
mapview::mapview(zcol = c("cases", "deaths", "county_name"))
library(tidyverse)
library(reactable)
library(plotly)
#devtools::install_github("UrbanInstitute/urbnmapr")
library(urbnmapr)
library(mapview)
load("data/nyt_counties.rda")
load("data/nyt_states.rda")
knitr::opts_chunk$set(
size = "small",
error = TRUE,
fig.align = "center",
tidy = FALSE
)
tn %>%
sf::st_as_sf() %>%
mapview::mapview(zcol = c("cases", "deaths", "county_name"))
tn %>%
sf::st_as_sf() %>%
mapview::mapview(zcol = c("cases", "deaths", "county_name"))
tn %>%
sf::st_as_sf() %>%
mapview::mapview()
tn %>%
sf::st_as_sf() %>%
mapview::mapview(zcol = ("cases"))
tn %>%
sf::st_as_sf() %>%
mapview::mapview(zcol = ("cases","county_name"))
tn %>%
sf::st_as_sf() %>%
mapview::mapview(zcol = c("cases","county_name"))
tn %>%
sf::st_as_sf() %>%
mapview::mapview(zcol = c("cases","deaths"))
tn %>%
sf::st_as_sf() %>%
mapview::mapview(zcol = c("cases"))
pl %>%
sf::st_as_sf() %>%
mapview::mapview(zcol = ("cases"))
pl %>%
sf::st_as_sf() %>%
mapview::mapview(zcol = list("cases", "county_name"))
pl %>%
sf::st_as_sf() %>%
mapview::mapview(zcol = c("cases", "county"))
pl %>%
sf::st_as_sf() %>%
mapview::mapview(zcol = c("cases"))
pl %>%
sf::st_as_sf() %>%
mapview::mapview(zcol = ("cases"))+mapview(pl,zcol = ("county_name"))
pl %>%
sf::st_as_sf() %>%
mapview::mapview(zcol = ("county_name"))
pl %>%
sf::st_as_sf() %>%
mapview::mapview(zcol = ("cases"))
renderLeaflet()
runApp('medicare')
library(leaflet.providers)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
source('~/nyt-covid-analysis/import.R')
shiny::runApp()
download.packages(shinythemes)
download.packages("shinythemes")
download.packages('shinythemes')
install.packages("shinythemes")
runApp()
runApp()
shiny::runApp()
source('~/nyt-covid-analysis/import.R')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('medicare')
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
source('~/nyt-covid-analysis/import.R')
nyt_counties %>%
prac <-
nyt_counties %>%
mutate(mortalityRate = deaths/cases)
library(dplyr)
prac <-
nyt_counties %>%
mutate(mortalityRate = deaths/cases)
View(prac)
runApp()
runApp()
runApp()
runApp()
runApp()
source('~/nyt-covid-analysis/import.R')
View(nyt_counties)
runApp()
runApp()
runApp()
shiny::runApp()
source('~/nyt-covid-analysis/import.R')
runApp()
runApp()
p <-
nyt_counties %>%
filter(state == input$state, date == input$date) %>%
mutate(cases = ifelse(is.na(cases), 0, cases),
deaths = ifelse(is.na(deaths), 0, deaths),
mortalityRate = signif(deaths/cases, digits = 5)) %>%
right_join(counties_sf %>% filter(state_name == input$state),
by = c("fips" = "county_fips"))
runApp()
runApp()
runApp()
library(tidyverse)
library(reactable)
library(plotly)
#devtools::install_github("UrbanInstitute/urbnmapr")
library(urbnmapr)
library(mapview)
load("data/nyt_counties.rda")
load("data/nyt_states.rda")
knitr::opts_chunk$set(
size = "small",
error = TRUE,
fig.align = "center",
tidy = FALSE
)
tn %>%
sf::st_as_sf() %>%
mapview::mapview(zcol = c("cases","deaths"))
## get the most recent available day:
day <-
nyt_counties %>%
pull(date) %>%
unique() %>%
sort(decreasing = TRUE) %>%
.[1]
## devtools::install_github("UrbanInstitute/urbnmapr")
counties_sf <- urbnmapr::get_urbn_map("counties", sf = TRUE)
tn <-
nyt_counties %>%
filter(state == "Tennessee", date == day) %>%
right_join(counties_sf %>% filter(state_name == "Tennessee"),
by = c("fips" = "county_fips")) %>%
mutate(cases = ifelse(is.na(cases), 0, cases),
deaths = ifelse(is.na(deaths), 0, deaths))
ggplot() +
geom_sf(tn,
mapping = aes(fill = cases, geometry = geometry),
color = "white", size = 0.05) +
coord_sf(datum = NA) +
labs(fill = "Confirmed Cases",
title = paste0("Tennessee COVID-19 Cases as of ", day))
tn %>%
sf::st_as_sf() %>%
mapview::mapview(zcol = c("cases","deaths"))
tn %>%
sf::st_as_sf() %>%
mapview::mapview(zcol = c("deaths"))
tn %>%
sf::st_as_sf() %>%
mapview::mapview(zcol = c("deaths"), ncol = 2)
View(tn)
tn %>%
sf::st_as_sf() %>%
mapview::mapview(zcol = c("deaths", "cases"), ncol = 2)
install.packages(c("backports", "broom", "callr", "classInt", "covr", "crosstalk", "dbplyr", "devtools", "digest", "dplyr", "DT", "forcats", "fs", "gdtools", "ggformula", "ggplot2", "ggrepel", "ggstance", "glue", "hexbin", "jsonlite", "knitr", "lubridate", "mapdeck", "mime", "modelr", "mosaic", "mvtnorm", "partykit", "pkgbuild", "plotly", "plyr", "prettyunits", "processx", "ps", "purrr", "raster", "Rcpp", "RCurl", "remotes", "reshape2", "rex", "RMySQL", "roxygen2", "rstudioapi", "sf", "shiny", "sp", "stringi", "systemfonts", "testthat", "tibble", "tidyselect", "tinytex", "usethis", "withr", "xfun", "xml2", "yaml"))
install.packages(c("backports", "broom", "callr"))
install.packages(c("classInt", "covr", "crosstalk"))
install.packages(c("dbplyr", "devtools", "digest"))
install.packages(c("dbplyr", "devtools", "digest"))
install.packages(c("dbplyr", "devtools", "digest", "dplyr"))
library(tidyverse)
library(reactable)
library(plotly)
#devtools::install_github("UrbanInstitute/urbnmapr")
library(urbnmapr)
library(mapview)
load("data/nyt_counties.rda")
load("data/nyt_states.rda")
knitr::opts_chunk$set(
size = "small",
error = TRUE,
fig.align = "center",
tidy = FALSE
)
tn %>%
sf::st_as_sf() %>%
mapview::mapview(zcol = c("deaths", "cases"))
tn %>%
sf::st_as_sf() %>%
mapview::mapview(zcol = c("deaths", "cases"))
tn %>%
sf::st_as_sf() %>%
mapview::mapview(zcol = c("deaths", "cases"))
tn %>%
sf::st_as_sf() %>%
mapview::mapview(zcol = c("deaths))
tn %>%
sf::st_as_sf() %>%
mapview::mapview(zcol = c("deaths))
tn %>%
sf::st_as_sf() %>%
mapview::mapview(zcol = c("deaths))
library(tidyverse)
library(reactable)
library(plotly)
#devtools::install_github("UrbanInstitute/urbnmapr")
library(urbnmapr)
library(mapview)
load("data/nyt_counties.rda")
load("data/nyt_states.rda")
knitr::opts_chunk$set(
size = "small",
error = TRUE,
fig.align = "center",
tidy = FALSE
)
tn %>%
sf::st_as_sf() %>%
mapview::mapview(zcol = c("deaths))
tn %>%
sf::st_as_sf() %>%
mapview::mapview(zcol = c("deaths))
tn %>%
sf::st_as_sf() %>%
mapview::mapview(zcol = "deaths)
tn %>%
sf::st_as_sf() %>%
mapview::mapview(zcol = "deaths)
install.packages(c("dplyr", "ggplot2", "knitr", "lubridate"))
install.packages(c("dplyr", "knitr", "lubridate"))
library(tidyverse)
library(reactable)
library(plotly)
#devtools::install_github("UrbanInstitute/urbnmapr")
library(urbnmapr)
library(mapview)
load("data/nyt_counties.rda")
load("data/nyt_states.rda")
knitr::opts_chunk$set(
size = "small",
error = TRUE,
fig.align = "center",
tidy = FALSE
)
tn %>%
sf::st_as_sf() %>%
mapview::mapview(zcol = "deaths)
tn %>%
sf::st_as_sf() %>%
mapview::mapview(zcol = "deaths)
library(shinydashboard)
library(tidyverse)
library(leaflet)
library(reactable)
library(shinythemes)
library(tidyverse)
library(sf)
library(mapview)
library(leaflet.providers)
shiny::runApp()
runApp()
install.packages(c("dplyr", "purrr", "sf"))
install.packages(c("dplyr", "purrr", "sf"))
install.packages(c("dplyr", "purrr", "sf"))
shiny::runApp()
library(tidyverse)
library(reactable)
library(plotly)
#devtools::install_github("UrbanInstitute/urbnmapr")
library(urbnmapr)
library(mapview)
load("data/nyt_counties.rda")
load("data/nyt_states.rda")
knitr::opts_chunk$set(
size = "small",
error = TRUE,
fig.align = "center",
tidy = FALSE
)
tn %>%
sf::st_as_sf() %>%
mapview::mapview(zcol = "deaths)
## get the most recent available day:
day <-
nyt_counties %>%
pull(date) %>%
unique() %>%
sort(decreasing = TRUE) %>%
.[1]
## devtools::install_github("UrbanInstitute/urbnmapr")
counties_sf <- urbnmapr::get_urbn_map("counties", sf = TRUE)
tn <-
nyt_counties %>%
filter(state == "Tennessee", date == day) %>%
right_join(counties_sf %>% filter(state_name == "Tennessee"),
by = c("fips" = "county_fips")) %>%
mutate(cases = ifelse(is.na(cases), 0, cases),
deaths = ifelse(is.na(deaths), 0, deaths))
library(tidyverse)
library(reactable)
library(plotly)
#devtools::install_github("UrbanInstitute/urbnmapr")
library(urbnmapr)
library(mapview)
load("data/nyt_counties.rda")
load("data/nyt_states.rda")
knitr::opts_chunk$set(
size = "small",
error = TRUE,
fig.align = "center",
tidy = FALSE
)
install.packages(c(
"tidyverse",
"reactable",
"mapview"
))
devtools::install_github("UrbanInstitute/urbnmapr")
install.packages(c("tidyverse", "reactable", "mapview"))
tn %>%
sf::st_as_sf() %>%
mapview::mapview(zcol = "deaths)
runApp()
p <-
nyt_counties %>%
filter(state == "Tennessee", date == day) %>%
mutate(cases = ifelse(is.na(cases), 0, cases),
deaths = ifelse(is.na(deaths), 0, deaths),
mortalityRate = signif(deaths/cases, digits = 5)) %>%
right_join(counties_sf %>% filter(state_name == "Tennessee"),
by = c("fips" = "county_fips")) %>%
sf::st_as_sf()
View(p)
runApp()
source('~/nyt-covid-analysis/import.R')
shiny::runApp()
